# frozen_string_literal: true

require "rake"
require_relative "../bin/shared/constants"

namespace :macOS do
  desc "installs macOS devtools"
  task :devtools do
    system("xcode-select --install")
  end

  namespace :brew do
    desc "installs homebrew"
    task :install do
      system("/usr/bin/ruby -e \"$(curl -fsSL #{Const::URL::GitHub::HOMEBREW})\"")
      system("brew tap Homebrew/bundle")
    end

    desc "installs brew packages"
    task :bundle do
      system("brew bundle --file=#{Const::Dotfiles::Setup::BREWFILE_PATH}")
    end

    task all: %w[install bundle]
  end

  desc "installs global gems"
  task :gems do
    system("gem install bundler")
    system("bundle install --system --gemfile #{Const::Dotfiles::Setup::GLOBAL_GEMFILE_PATH}")
  end

  task all: %w[devtools brew:all gems]
end

namespace :linux do
  task :packages do
    system("sudo apt remove --autoremove emacs emacs-common")
    system("sudo add-apt-repository ppa:kelleyk/emacs")
    system("sudo apt update")
    system("sudo apt install emacs28")
  end

  task all: %w[packages]
end

namespace :install do
  desc "install zsh"
  task :zsh do
    system("sh -c \"$(curl -fsSL #{Const::URL::GitHub::OH_MY_ZSH})\"")
  end

  desc "clone spacemacs"
  task :spacemacs do
    system("rm -rf ~/.emacs.d/")
    system("git clone #{Const::URL::GitHub::SPACEMACS} ~/.emacs.d")
    system("rm -rf ~/.emacs.d/private/")
  end

  task all: %w[zsh spacemacs]
end

namespace :dotfiles do
  desc "links dotfiles to their appropriate locations"
  task :links do
    system("ln -sf #{Const::Dotfiles::Emacs::SPACEMACS_PATH} ~/.spacemacs")
    system("ln -sfn #{Const::Dotfiles::Emacs::PRIVATE_PATH} ~/.emacs.d/")
    system("ln -sf #{Const::Dotfiles::Zsh::RC_PATH} ~/.zshrc")
    system("ln -sf #{Const::Dotfiles::Zsh::ENV_PATH} ~/.zshenv")
    system("ln -sf #{Const::Dotfiles::Ruby::RUBOCOP_PATH} ~/.rubocop.yml")
  end

  task all: %w[links]
end

if ENV["MAC_OS"]
  task default: %i(macOS:all install:all dotfiles:all)
else
  task default: %i(linux:all install:all dotfiles:all)
end
